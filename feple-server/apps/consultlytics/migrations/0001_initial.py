# Generated by Django 5.2.1 on 2025-06-04 07:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Consulting',
            fields=[
                ('call_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('call_date', models.DateTimeField(auto_now_add=True)),
                ('call_duration', models.IntegerField(default=0)),
                ('silence', models.IntegerField(default=0)),
                ('csr_speech_count', models.IntegerField(default=0)),
                ('customer_speech_count', models.IntegerField(default=0)),
                ('csr_emotion_score', models.FloatField(default=0.0)),
                ('customer_emotion_score', models.FloatField(default=0.0)),
                ('efficiency_score', models.IntegerField(default=0)),
                ('final_score', models.IntegerField(default=0)),
                ('alternative_solution_count', models.IntegerField(default=0)),
                ('apology_ratio', models.FloatField(default=0.0)),
                ('positive_word_ratio', models.FloatField(default=0.0)),
                ('euphonious_word_ratio', models.FloatField(default=0.0)),
                ('empathy_expression_ratio', models.FloatField(default=0.0)),
                ('emo_1_star_score', models.BooleanField(default=False)),
                ('emo_2_star_score', models.BooleanField(default=False)),
                ('emo_3_star_score', models.BooleanField(default=False)),
                ('emo_4_star_score', models.BooleanField(default=False)),
                ('emo_5_star_score', models.BooleanField(default=False)),
                ('고객_emo_1_star_score', models.BooleanField(default=False)),
                ('고객_emo_2_star_score', models.BooleanField(default=False)),
                ('고객_emo_3_star_score', models.BooleanField(default=False)),
                ('고객_emo_4_star_score', models.BooleanField(default=False)),
                ('고객_emo_5_star_score', models.BooleanField(default=False)),
                ('strength', models.TextField(blank=True, null=True)),
                ('weakness', models.TextField(blank=True, null=True)),
                ('improvement', models.TextField(blank=True, null=True)),
                ('manual_compliance_ratio', models.FloatField(blank=True, null=True)),
                ('score', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consulting_content', models.TextField(blank=True, null=True, verbose_name='상담 대화 전체 텍스트')),
                ('Extension', models.CharField(blank=True, max_length=10, null=True, verbose_name='파일 확장자')),
                ('Path', models.TextField(blank=True, null=True, verbose_name='파일 저장 경로')),
                ('Rate', models.IntegerField(blank=True, null=True, verbose_name='샘플링 레이트')),
                ('BitDepth', models.IntegerField(blank=True, null=True, verbose_name='비트 깊이')),
                ('Channels', models.IntegerField(blank=True, null=True, verbose_name='채널 수')),
                ('Duration', models.IntegerField(blank=True, null=True, verbose_name='전체 프레임 수')),
                ('MinFreq', models.IntegerField(blank=True, null=True, verbose_name='최소 주파수')),
                ('MaxFreq', models.IntegerField(blank=True, null=True, verbose_name='최대 주파수')),
                ('RMSLoudness', models.FloatField(blank=True, null=True, verbose_name='평균 음량 RMS')),
                ('ZeroCrossingRate', models.FloatField(blank=True, null=True, verbose_name='영점 교차율')),
                ('SpectralCentroid', models.FloatField(blank=True, null=True, verbose_name='스펙트럼 무게중심')),
                ('SpectralBandwidth', models.FloatField(blank=True, null=True, verbose_name='스펙트럼 대역폭')),
                ('SpectralFlatness', models.FloatField(blank=True, null=True, verbose_name='스펙트럼 평탄도')),
                ('RollOff', models.FloatField(blank=True, null=True, verbose_name='롤-오프 주파수')),
                ('Chroma_stft', models.JSONField(blank=True, null=True, verbose_name='크로마 STFT')),
                ('SpectralContrast', models.JSONField(blank=True, null=True, verbose_name='스펙트럴 대비')),
                ('Tonnetz', models.JSONField(blank=True, null=True, verbose_name='Tonnetz 특성')),
                ('MFCC_0_13', models.JSONField(blank=True, null=True, verbose_name='멜-주파수 켑스트럼 계수 0~13')),
                ('Summary', models.TextField(blank=True, null=True, verbose_name='통화 요약 텍스트')),
                ('Conflict', models.BooleanField(blank=True, null=True, verbose_name='갈등 플래그')),
                ('Speaker', models.CharField(blank=True, max_length=20, null=True, verbose_name='발화자 구분')),
                ('Sequence', models.IntegerField(blank=True, null=True, verbose_name='파일 내 발화 순번')),
                ('StartTime', models.IntegerField(blank=True, null=True, verbose_name='발화 시작 프레임 번호')),
                ('EndTime', models.IntegerField(blank=True, null=True, verbose_name='발화 종료 프레임 번호')),
                ('Content', models.TextField(blank=True, null=True, verbose_name='발화 내용 텍스트')),
                ('Sentiment', models.CharField(blank=True, max_length=20, null=True, verbose_name='감정 레이블')),
                ('Profane', models.BooleanField(blank=True, null=True, verbose_name='비속어 사용 플래그')),
                ('top_nouns', models.JSONField(blank=True, null=True, verbose_name='상위 명사 키워드 10개')),
                ('sent_score', models.FloatField(blank=True, null=True, verbose_name='전반적 감정 점수')),
                ('sent_label', models.CharField(blank=True, max_length=20, null=True, verbose_name='평균 감정 레이블')),
                ('mid_category', models.CharField(blank=True, max_length=100, null=True, verbose_name='메인 카테고리')),
                ('content_category', models.CharField(blank=True, max_length=100, null=True, verbose_name='서브 카테고리')),
                ('script_phrase_ratio', models.FloatField(blank=True, null=True, verbose_name='스크립트 필수 문구 사용 비율')),
                ('honorific_ratio', models.FloatField(blank=True, null=True, verbose_name='높임말·존댓말 비율')),
                ('confirmation_ratio', models.FloatField(blank=True, null=True, verbose_name='확인형 멘트 비율')),
                ('request_ratio', models.FloatField(blank=True, null=True, verbose_name='의뢰형 멘트 비율')),
                ('conflict_flag', models.BooleanField(blank=True, null=True, verbose_name='논쟁 여부')),
            ],
            options={
                'db_table': 'consulting',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('session_id', models.CharField(help_text='상담 세션 고유 식별자', max_length=100, primary_key=True, serialize=False, verbose_name='세션 ID')),
                ('speech_count', models.IntegerField(help_text='상담 세션에서 인식된 총 발화 수', verbose_name='총 발화 수')),
                ('consulting_text', models.TextField(help_text='원본 상담 대화 전체 내용', verbose_name='상담 텍스트')),
                ('asr_segments', models.JSONField(help_text='고객/상담사 발화를 분리한 JSON 리스트', verbose_name='ASR 세그먼트')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='분석 시각')),
            ],
        ),
        migrations.CreateModel(
            name='ScriptMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('script_phrase_ratio', models.FloatField(verbose_name='스크립트 준수 비율')),
                ('honorific_ratio', models.FloatField(verbose_name='존댓말 비율')),
                ('positive_word_ratio', models.FloatField(verbose_name='긍정 단어 비율')),
                ('euphonious_word_ratio', models.FloatField(verbose_name='완곡어 사용 비율')),
                ('confirmation_ratio', models.FloatField(verbose_name='확인 멘트 비율')),
                ('empathy_ratio', models.FloatField(verbose_name='공감 멘트 비율')),
                ('apology_ratio', models.FloatField(verbose_name='사과 멘트 비율')),
                ('request_ratio', models.FloatField(verbose_name='의뢰 멘트 비율')),
                ('alternative_count', models.IntegerField(verbose_name='대안 제안 횟수')),
                ('conflict_flag', models.BooleanField(choices=[(False, '없음'), (True, '있음')], default=False, verbose_name='갈등 여부')),
                ('manual_compliance_ratio', models.FloatField(verbose_name='매뉴얼 준수 비율')),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='script_metrics', to='consultlytics.session', verbose_name='세션')),
            ],
        ),
        migrations.CreateModel(
            name='ResultClassification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(help_text='만족, 미흡, 추가 상담 필요, 해결 불가', max_length=50, verbose_name='결과 레이블')),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='consultlytics.session', verbose_name='세션')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mid_category', models.CharField(max_length=100, verbose_name='상담 카테고리')),
                ('content_category', models.CharField(max_length=100, verbose_name='상담 유형')),
                ('mid_category_id', models.IntegerField(verbose_name='카테고리 ID')),
                ('result_label', models.CharField(max_length=50, verbose_name='최종 결과 레이블')),
                ('label_id', models.IntegerField(verbose_name='결과 레이블 ID')),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='category', to='consultlytics.session', verbose_name='세션')),
            ],
        ),
        migrations.CreateModel(
            name='TopNoun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nouns', models.JSONField(help_text='추출된 상위 10개 명사 리스트', verbose_name='Top10 명사')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='top_nouns', to='consultlytics.session', verbose_name='세션')),
            ],
        ),
        migrations.CreateModel(
            name='EmotionScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actor', models.CharField(choices=[('customer', '고객'), ('agent', '상담사')], help_text='점수 대상: 고객 또는 상담사', max_length=10, verbose_name='행위자')),
                ('star1', models.FloatField(verbose_name='1★ 비율')),
                ('star2', models.FloatField(verbose_name='2★ 비율')),
                ('star3', models.FloatField(verbose_name='3★ 비율')),
                ('star4', models.FloatField(verbose_name='4★ 비율')),
                ('star5', models.FloatField(verbose_name='5★ 비율')),
                ('avg_score', models.FloatField(help_text='1~5★ 비율의 가중 평균', verbose_name='평균 점수')),
                ('label', models.CharField(help_text='평균 점수 기반 분류 라벨', max_length=50, verbose_name='감정 레이블')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emotion_scores', to='consultlytics.session', verbose_name='세션')),
            ],
            options={
                'unique_together': {('session', 'actor')},
            },
        ),
    ]
